{"version":3,"file":"server.js","sources":["../server/utils.js","../server/controllers/index.js","../server/models/Room.js","../server/models/Message.js","../server/controllers/Chat.js","../server/models/User.js","../server/controllers/Auth.js","../server/router/index.js","../server/config/index.js","../server/controllers/Socket.js","../server/server.js"],"sourcesContent":["import { Liquid } from 'liquidjs'\nimport path from 'node:path'\nimport { fileURLToPath } from 'node:url'\n\nconst __filename = fileURLToPath(import.meta.url)\nconst __dirname = path.dirname(__filename)\n\nconst engine = new Liquid({\n  root: __dirname, // for layouts and partials\n  extname: '.liquid',\n})\n\nexport const renderTemplate = (template, data) => {\n  const templateData = {\n    NODE_ENV: process.env.NODE_ENV || 'production',\n    ...data,\n  }\n\n  return engine.renderFileSync(`${template}`, templateData)\n}\n\nconst users = []\nexport const addUser = ({ socket_id, name, user_id, room_id }) => {\n  const exist = users.find((user) => user.room_id === room_id && user.user_id === user_id)\n  if (exist) {\n    return { error: 'User already exist in this room' }\n  }\n  const user = { socket_id, name, user_id, room_id }\n  users.push(user)\n  console.log('users list', users)\n  return { user }\n}\n\nexport const removeUser = (socket_id) => {\n  const index = users.findIndex((user) => user.socket_id === socket_id)\n  if (index !== -1) {\n    return users.splice(index, 1)[0]\n  }\n}\nexport const getUser = (socket_id) => users.find((user) => user.socket_id === socket_id)\n","import { renderTemplate } from '../utils.js'\n\nexport const homeController = async (req, res, next) => {\n  const { username, email, password, name, id } = req.body\n\n  try {\n    if (req.user) {\n      console.log(req.user)\n    }\n\n    const data = { title: 'Movies', movieData: 'data', user: req.user, username: req.user.username }\n    // const render = renderTemplate('index.liquid', data);\n\n    console.log(data)\n\n    // res.render('index', data)\n    // res.send(renderTemplate('views/index.liquid', data));\n    res.render('index.njk', data)\n  } catch (err) {\n    let data = {\n      error: { message: err },\n    }\n\n    // res.send(renderTemplate('views/index.liquid', data));\n    res.render('index.njk', data)\n  }\n}\n","import mongoose from 'mongoose'\nconst Schema = mongoose.Schema\nconst RoomSchema = new Schema({\n  name: {\n    type: String,\n    required: true,\n  },\n})\nconst Room = mongoose.model('Room', RoomSchema)\n\nexport default Room\n","import mongoose from 'mongoose'\nconst Schema = mongoose.Schema\n\nconst MessageSchema = new Schema(\n  {\n    name: {\n      type: String,\n      required: true,\n    },\n    user_id: {\n      type: String,\n      required: true,\n    },\n    text: {\n      type: String,\n      required: true,\n    },\n    room_id: {\n      type: String,\n      required: true,\n    },\n    alert: Boolean,\n  },\n  { timestamps: true }\n)\n\nconst Message = mongoose.model('Message', MessageSchema)\nexport default Message\n","import Room from '../models/Room.js'\nimport Message from '../models/Message.js'\n\nexport const chatController = async (req, res, next) => {\n  const { username, email, password, name, id } = req.body\n\n  try {\n    const data = { user: req.user }\n    // const render = renderTemplate('index.liquid', data);\n\n    console.log(data)\n    res.render('chat', data)\n  } catch (err) {\n    let data = {\n      error: { message: err },\n    }\n\n    res.render('chat.njk', data)\n  }\n}\n","import mongoose from 'mongoose'\nconst Schema = mongoose.Schema\nimport bcrypt from 'bcrypt'\n\nimport passportLocalMongoose from 'passport-local-mongoose'\n\nconst UserSchema = new Schema({\n  id: Number,\n  name: String,\n  username: {\n    type: String,\n    required: true,\n    unique: true,\n  },\n  password: String,\n  admin: Boolean,\n})\n\nUserSchema.pre('save', async function (next) {\n  const salt = await bcrypt.genSalt()\n  this.password = await bcrypt.hash(this.password, salt)\n\n  next()\n})\n\nUserSchema.statics.login = async function (username, password) {\n  console.log('loginschema')\n  console.log(username + password)\n  let user = await this.findOne({ username })\n  if (user) {\n    console.log(user)\n    console.log('compare pass')\n    console.log(password)\n    console.log(user.password)\n    let isAuthenticated = await bcrypt.compare(password, user.password)\n    if (isAuthenticated) {\n      return user\n    } else {\n      throw Error('Incorrect password')\n    }\n  } else {\n    throw Error('Incorrect email')\n  }\n}\n\nUserSchema.plugin(passportLocalMongoose)\n\nconst User = mongoose.model('User', UserSchema)\nexport default User\n","import passport from 'passport'\nimport jwt from 'jsonwebtoken'\n\nimport { renderTemplate } from '../utils.js'\nimport User from '../models/User.js'\n// import express from 'express';\n// import jwt from 'passport-jwt';\n// import { Error } from 'mongoose';\n\nconst maxAge = 24 * 60 * 60\n\nconst createJWT = (id) => {\n  return jwt.sign({ id }, 'chatroom secret', {\n    expiresIn: maxAge, // in token expiration, calculate by second\n  })\n}\n\nconst alertError = (err) => {\n  let errors = { name: '', email: '', password: '' }\n  console.log('err message', err.message)\n  console.log('err code', err.code)\n\n  if (err.message === 'Incorrect email') {\n    errors.email = 'This email not found!'\n  }\n  if (err.message === 'Incorrect password') {\n    errors.password = 'The password is incorrect!'\n  }\n  if (err.code === 11000) {\n    errors.email = 'This email already registered'\n    return errors\n  }\n  if (err.message.includes('User validation failed')) {\n    Object.values(err.errors).forEach(({ properties }) => {\n      errors[properties.path] = properties.message\n    })\n  }\n  return errors\n}\n\nexport const signinup = async (req, res, next) => {\n  let { username, password } = req.body\n  try {\n    let userExists = await User.findByUsername(username)\n\n    if (userExists) {\n      let user = userExists\n      let token = createJWT(user._id)\n      console.log(token)\n      res.cookie('jwt', token, { httpOnly: true, maxAge: maxAge * 1000 })\n    } else {\n    }\n\n    console.log(userExists)\n  } catch (error) {\n    console.log(error)\n    let errors = alertError(error)\n    console.log(errors)\n  }\n}\n\nexport const newRegister = async (req, res) => {\n  console.log('reqbody 1')\n  console.log(req.body)\n  let { username, name, password } = req.body\n  try {\n    let newUser = {\n      username: username,\n      name: name,\n      password: password,\n    }\n    console.log('newUser')\n    console.log(newUser)\n\n    let user = await User.create({ username, name, password })\n    console.log('user')\n    console.log(user)\n\n    let token = createJWT(user._id)\n    console.log('token')\n    console.log(token)\n    // create a cookie name as jwt and contain token and expire after 1 day\n    // in cookies, expiration date calculate by milisecond\n    res.cookie('jwt', token, { httpOnly: true, maxAge: maxAge * 1000 })\n    res.status(201).json({ user })\n  } catch (error) {\n    let errors = alertError(error)\n    res.status(400).json({ errors })\n  }\n}\n\nexport const register = async (req, res, next) => {\n  try {\n    let data = {\n      layout: 'base.liquid',\n      title: 'Welcome',\n      error: null,\n    }\n\n    res.render('register', data)\n  } catch (err) {\n    let data = {\n      error: { message: err },\n      layout: 'base.liquid',\n    }\n    res.render('register', data)\n    // res.render('register.liquid', data);\n    next(err)\n  }\n}\n\nexport const doRegister = async (req, res, next) => {\n  const { username, email, password, name, id } = req.body\n\n  console.log(req.body)\n\n  let data = {\n    layout: 'base.liquid',\n    title: 'Welcome',\n    error: null,\n    message: '',\n    succes: '',\n  }\n\n  try {\n    console.log(req.body)\n    await User.register(\n      new User({\n        username: req.body.username,\n        email: req.body.username,\n        password: req.body.password,\n        name: req.body.name,\n      }),\n      username,\n      function (err, user) {\n        if (err) {\n          data.succes = false\n          data.message = err\n\n          // res.render('register.liquid', data);\n          res.render('register', data)\n        } else {\n          req.login(user, (er) => {\n            if (er) {\n              data.succes = false\n              data.message = er\n              // res.render('register.liquid', data);\n              res.render('register', data)\n            } else {\n              res.redirect('/')\n            }\n          })\n        }\n      }\n    )\n  } catch (error) {\n    next(error)\n  }\n}\n\nexport const newLogin = async (req, res) => {\n  let { username, password } = req.body\n  try {\n    let user = await User.login(username, password)\n    let token = createJWT(user._id)\n    console.log('token')\n    console.log(token)\n    res.cookie('jwt', token, { httpOnly: true, maxAge: maxAge * 1000 })\n    res.status(201).json({ user })\n  } catch (error) {\n    let errors = alertError(error)\n    res.status(400).json({ errors })\n  }\n}\n\nexport const login = async (req, res, next) => {\n  const { username, email, password, name, id } = req.body\n  let data = {\n    layout: 'base.liquid',\n    title: 'Welcome',\n    error: null,\n    message: '',\n  }\n  try {\n    if (req.user) {\n      res.redirect('/')\n    } else {\n      res.render('login.njk', data)\n    }\n  } catch (err) {\n    let data = {\n      error: { message: err },\n      layout: 'base.njk',\n    }\n    // res.render('login', data)\n    next(err)\n  }\n}\n\nexport const doLogin = async (req, res, next) => {\n  const { username, email, password, name, id } = req.body\n  console.log('req.login')\n  console.log(req.login)\n\n  let data = {\n    layout: 'base.njk',\n    title: 'Welcome',\n    error: null,\n    message: '',\n  }\n  try {\n    if (req.body.username) {\n      console.log(username)\n      await User.findByUsername(username, username, function (err, user) {\n        if (err) {\n          console.log(err)\n          data.succes = false\n          data.error = err\n          res.render('login.njk', data)\n        } else {\n          req.login(user, (er) => {\n            if (er) {\n              console.log(er)\n              data.succes = false\n              data.error = 'Email not found'\n              res.render('login', data)\n            } else {\n              console.log('req.login')\n              console.log(req.login)\n              res.redirect('/')\n            }\n          })\n        }\n      })\n    } else {\n      res.render('login.njk', data)\n    }\n  } catch (error) {\n    res.render('login.njk', data)\n    next(error)\n  }\n}\n\nexport const verifyuser = async (req, res, next) => {\n  const token = req.cookies.jwt\n  if (token) {\n    console.log('token')\n    console.log(token)\n    jwt.verify(token, 'chatroom secret', async (err, decodedToken) => {\n      if (err) {\n        console.log('error.msg')\n        console.log(err.message)\n      } else {\n        console.log('decodedToken.id')\n        console.log(decodedToken.id)\n        let user = await User.findById(decodedToken.id)\n        res.json(user)\n        next()\n      }\n    })\n  } else {\n    next()\n  }\n}\n\nexport const logout = (req, res, next) => {\n  req.logout((err) => {\n    if (err) {\n      return next(err)\n    }\n    res.redirect('/login')\n  })\n}\n","import express from 'express'\n\nimport { homeController } from '../controllers/index.js'\nimport { chatController } from '../controllers/Chat.js'\nimport { register, doRegister, login, doLogin, logout, verifyuser } from '../controllers/Auth.js'\n\nimport multer from 'multer'\nconst upload = multer()\nconst router = express.Router()\n\nrouter.get('/', homeController)\n\nrouter.get('/register', register)\nrouter.post('/register', upload.array(), doRegister)\n\nrouter.get('/login', login)\nrouter.post('/login', upload.array(), doLogin)\n\nrouter.get('/logout', logout)\nrouter.post('/logout', logout)\n\nrouter.get('/verifyuser', verifyuser)\nrouter.post('/verifyuser', verifyuser)\n\nrouter.get('/chat', chatController)\n\nexport default router\n","import session from 'express-session'\nimport cookieParser from 'cookie-parser'\nimport passport from 'passport'\n\n// import LocalStrategy from 'passport-local-mongoose';\n\nimport User from '../models/User.js'\nimport mongoose from 'mongoose'\n\n// const newMongoStore = MongoStore(session)\n\nexport const mongooseMiddleware = () => {\n  mongoose.Promise = global.Promise\n  return mongoose.connect(process.env.MONGO_DB, {\n    dbName: process.env.DB_NAME,\n    useNewUrlParser: true,\n    useUnifiedTopology: true,\n  })\n}\n\nexport const config = function (app, io) {\n  const wrap = (middleware) => (socket, next) => middleware(socket.request, {}, next)\n  const cookieMiddleware = cookieParser(process.env.SESSION_SECRET)\n\n  app.use(cookieMiddleware)\n  // app.use(cookieSession({\n  // \tkeys: [process.env.SESSION_SECRET, 'key2']\n  // }))\n\n  const sessionMiddleware = session({\n    // this should be changed to something cryptographically secure for production\n    secret: process.env.SESSION_SECRET,\n    resave: false,\n    saveUninitialized: true,\n    // automatically extends the session age on each request. useful if you want\n    // the user's activity to extend their session. If you want an absolute session\n    // expiration, set to false\n    rolling: true,\n    name: 'localhost',\n    // set your options for the session cookie\n    cookie: {\n      httpOnly: false,\n      sameSite: false,\n      // the duration in milliseconds that the cookie is valid\n      maxAge: 60 * 60 * 1000, // 20 minutes\n      // recommended you use this setting in production if you have a well-known domain you want to restrict the cookies to.\n      // domain: 'party-finderr.herokuapp.com',\n      // recommended you use this setting in production if your site is published using HTTPS\n      // secure: true,\n    },\n  })\n\n  app.use(sessionMiddleware)\n  io.use(wrap(sessionMiddleware))\n  io.use(wrap(cookieMiddleware))\n\n  passport.use(User.createStrategy())\n\n  passport.serializeUser(User.serializeUser())\n  passport.deserializeUser(User.deserializeUser())\n\n  // initialize passport. this is required, after you set up passport but BEFORE you use passport.session (if using)\n  app.use(passport.initialize())\n  // only required if using sessions. this will add middleware from passport\n  // that will serialize/deserialize the user from the session cookie and add\n  // them to req.user\n  app.use(passport.session())\n\n  io.use(wrap(passport.initialize()))\n  io.use(wrap(passport.session()))\n}\n","import Room from '../models/Room.js'\nimport Message from '../models/Message.js'\nimport { addUser, getUser, removeUser } from '../utils.js'\nexport const socketController = (io, socket) => {\n  console.log('user connected')\n  console.log('session')\n  console.log(socket.request.session)\n  console.log('ID')\n  console.log(socket.id)\n\n  Room.find().then((result) => {\n    socket.emit('output-rooms', result)\n  })\n\n  socket.on('create-room', (name) => {\n    const room = new Room({ name })\n    room.save().then((result) => {\n      io.emit('room-created', result)\n    })\n  })\n\n  socket.on('join', ({ name, room_id, user_id }) => {\n    const { error, user } = addUser({\n      socket_id: socket.id,\n      name,\n      user_id,\n      room_id,\n    })\n    socket.join(room_id)\n    if (error) {\n      console.log('join error', error)\n      io.to(room_id).emit('receive-message', { msg: 'err' })\n    } else {\n      io.to(room_id).emit('receive-message', { msg: 'hallo', user_id: null })\n      console.log('join user', user)\n    }\n  })\n\n  socket.on('send-message', ({ msg, room_id, alert, cb }) => {\n    const user = getUser(socket.id)\n    console.log(msg)\n    console.log(alert)\n    console.log(user)\n    // socket.emit('receive-message', msg);\n\n    const msgToStore = {\n      name: user.name,\n      user_id: user.user_id,\n      room_id,\n      text: msg,\n    }\n    console.log('messageStore')\n    console.log(msgToStore)\n    const message = new Message({\n      name: user.name,\n      user_id: user.user_id,\n      room_id: room_id,\n      text: msg,\n      alert: alert,\n    })\n\n    message.save().then((result) => {\n      io.to(room_id).emit('receive-message', result)\n    })\n  })\n\n  // socket.on('drawing', (data) => {\n  //   console.log(data)\n\n  //   // io.to(data.room_id).emit('drawing', data)\n  //   socket.broadcast.emit('drawing', data)\n  //   socket.emit('drawing', data)\n  // })\n\n  socket.on('get-messages-history', (room_id) => {\n    Message.find({ room_id }).then((result) => {\n      socket.emit('output-message', result)\n    })\n  })\n\n  socket.on('disconnect', () => {\n    const user = removeUser(socket.id)\n    console.log(user)\n    for (const room of socket.rooms) {\n      if (room !== socket.id) {\n        socket.to(room).emit('user has left', socket.id)\n      }\n    }\n\n    console.log('user disconnected')\n  })\n}\n","import 'dotenv/config'\n\nimport express from 'express'\nimport session from 'express-session'\nimport ViteExpress from 'vite-express'\n\nimport { createServer } from 'node:http'\nimport { fileURLToPath } from 'node:url'\nimport { dirname, join } from 'node:path'\n\nimport bodyParser from 'body-parser'\nimport cors from 'cors'\nimport http from 'http'\nimport path from 'node:path'\nimport { Liquid } from 'liquidjs'\nimport logger from 'morgan'\nimport { Server } from 'socket.io'\n\nimport nunjucks from 'nunjucks'\nimport expressNunjucks from 'express-nunjucks'\n\nimport { renderTemplate } from './utils.js'\nimport routes from './router/index.js'\nimport passport from './config/passport.js'\nimport { config } from './config/index.js'\n// import mongoose from \"./config/middleware/mongoose.js\";\nimport mongoose from 'mongoose'\nimport { socketController } from './controllers/Socket.js'\nconst PORT = process.env.PORT || 3000\nconst HOST = process.env.HOST || 'localhost'\n\nconst __filename = fileURLToPath(import.meta.url)\nconst __dirname = path.dirname(__filename)\n\nconst paths = {\n  views: path.join(__dirname, 'views'),\n  public: path.join(__dirname, '../public'),\n  src: path.join(__dirname, '../src'),\n  assets: path.join(__dirname, '../src/assets'),\n}\n\nconst devPaths = {\n  views: path.join(__dirname, 'views'),\n  public: path.join(__dirname, '/'),\n  src: path.join(__dirname, '../src'),\n  assets: path.join(__dirname, 'assets'),\n}\n\n\n\nconst serverOptions = {\n  cors: {\n    origin: `${HOST}:${PORT}`,\n    methods: ['GET', 'POST'],\n  },\n}\n\nconst app = express()\n\n// const server = http.createServer(app)\n\nconst server = http.createServer(app).listen(PORT, '0.0.0.0', () => {\n  console.log(`Server.Listen`)\n  console.log(`Server is listening on host: ${HOST} @ ${PORT}!`)\n})\n\nconst io = new Server(server)\n\nconst corsOptions = {\n  origin: '*',\n  methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n  allowedHeaders: '*',\n  exposedHeaders: '*',\n  credentials: true,\n  // optionsSuccessStatus: 204 // some legacy browsers (IE11, various SmartTVs) choke on 204\n}\n\nconst engine = new Liquid({\n  root: __dirname, // for layouts and partials\n  extname: '.liquid',\n  globals: { data: 'global' },\n})\n\nconst env = nunjucks.configure(paths.views, {\n  autoescape: true,\n  express: app,\n  watch: true,\n});\n\nenv.express(app)\n// const server = http.createServer(app).listen(PORT,\"0.0.0.0\", () => {\n//   console.log(`Server is listeningon ${PORT}!`);\n// });\n\napp.use(logger('dev'))\napp.set('trust proxy', ['loopback', 'linklocal', 'uniquelocal'])\napp.use(cors(corsOptions))\n// app.use(sessionMiddleware);\n// app.use(cookieParser())\napp.options('*', cors(corsOptions))\n\n\n\n// app.engine('liquid', engine.express())\n// app.set('views', [path.join(__dirname, './views'), path.join(__dirname, './views/partials')]) // specify the views directory\n// app.set('view engine', 'liquid') // set liquid to default\n\n\n\n\n\n\napp.set('view engine', 'njk')\napp.set('views', paths.views)\n\n// const njk = expressNunjucks(app, {\n//   loader: nunjucks.FileSystemLoader,\n// })\n\napp.use(express.json())\n\n\n\nif (process.env.NODE_ENV === 'development') {\n  app.use('/', express.static(paths.public))\n  app.use('/', express.static(paths.src))\n  app.use('/assets', express.static(paths.assets))\n}\n\nif (process.env.NODE_ENV === 'production') {\n  app.use('/', express.static(devPaths.public))\n  app.use('/assets', express.static(devPaths.assets))\n}\n\n\napp.use(bodyParser.json())\n\napp.use(\n  bodyParser.urlencoded({\n    extended: true,\n    credentials: true,\n  })\n)\n\nmongoose\n  .connect(process.env.MONGO_DB, {\n    dbName: process.env.DB_NAME,\n  })\n  .then(() => console.log(`Mongoose connected to ${process.env.MONGO_DB} `))\n  .catch((err) => console.log(err))\n\n// passport(app)\n// config(app, io)\nconfig(app, io)\n\napp.use((req, res, next) => {\n  res.locals.env = process.env.NODE_ENV || 'development'\n  next()\n})\n\napp.use(routes)\n\n// app.get('/', async (req, res, next) => {\n//   // const movieData = await getMovies();\n//   const data = { title: 'Movies', movieData: 'data' }\n//   // const render = renderTemplate('index.liquid', data);\n\n//   console.log(data)\n\n//   return res.send(renderTemplate('views/index.liquid', data));\n//   // return res.send(renderTemplate('views/index.liquid', { title: 'Home' }));\n// })\n\n// app.get(\"*\", (req, res, next) => {\n\n//   let err = new Error(`${req.ip} tried to reach ${req.originalUrl}`); // Tells us which IP tried to reach a particular URL\n//   err.statusCode = 404;\n//   err.shouldRedirect = true;\n//   console.log(err) //New property on err so that our middleware will redirect\n//   next();\n// });\n\napp.use((req, res, next) => {\n  // Make `user` and `authenticated` available in templates\n  res.locals.user = req.user\n  res.locals.authenticated = !req.user.anonymous\n  next()\n})\n\napp.use((err, req, res, next) => {\n  res.status(err.status || 500)\n  res.render('error.njk', {\n    message: err.message,\n    error: err.status,\n  })\n})\n\n// app.use(ViteExpress.static())\n\n// config(app, io)\n\nio.on('connection', async (socket) => {\n  socketController(io, socket)\n})\n\n// ViteExpress.config({ viteConfigFile: path.join(__dirname, '../vite.config.js')});\n\n// server.listen(PORT, '0.0.0.0', () => {\n//   console.log(`Server.Listen`)\n//   console.log(`Server is listening on host: ${HOST} @ ${PORT}!`)\n// })\nif (process.env.NODE_ENV === 'development') {\nViteExpress.bind(app, io, async () => {\n  console.log(`Vite Express Bind`)\n  const { root, base } = await ViteExpress.getViteConfig()\n  console.log(`Vite Express Bind`)\n  console.log(`Serving app from root ${root}`)\n  console.log(`Server is listening at http://${HOST}:${PORT}${base}`)\n})\n}\n// ViteExpress.listen(app, PORT, () => {\n//   console.log(`Server is listening on port ${PORT}...`)\n// })\n\n// if (process.env.NODE_ENV === 'development') {\n//   ViteExpress.listen(app, PORT, () => {\n//   console.log(__dirname)\n//   console.log(`Server is listening on port ${PORT}...`)\n// \t});\n// }\n// if (process.env.NODE_ENV === 'production') {\n// \tapp.listen(PORT, () => {\n// \t\tconsole.log(__dirname);\n// \t\tconsole.log(`Server is listening on port ${PORT}...`);\n// \t});\n// }\n"],"names":["__filename","__dirname","user","Schema","app","io","routes"],"mappings":"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"}